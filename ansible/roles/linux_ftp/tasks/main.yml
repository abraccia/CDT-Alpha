---
- name: Set ftp hostname
  ansible.builtin.hostname:
    name: "ftp"
  become: true

- name: Install vsftpd dependencies
  apt:
    name:
      - ftp
      - lftp
      - net-tools
      - libnsl-dev
      - gcc
      - make
      - libc6-dev
      - linux-headers-5.15.0-153-generic
      - libcrypt-dev
      - libcap-dev
      - libpam0g-dev
      - iptables-persistent
      - unzip
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

- name: Create /usr/include/sys/unistd.h file
  copy:
    content: '#include <unistd.h>'
    dest: /usr/include/sys/unistd.h
    mode: '0644'
  when: not ansible_facts['files']['/usr/include/sys/unistd.h'] is defined

# - name: Install if RedHat systems
#   yum:
#     name:
#       - ftp
#       - lftp
#       - net-tools
#     state: present
#   when: ansible_os_family == "RedHat"

- name: Copy vsftpd source zip to remote host
  copy:
    src: vsftpd-2.3.4.zip
    dest: /tmp/vsftpd-2.3.4.zip

- name: Extract vsftpd source zip
  ansible.builtin.unarchive:
    src: /tmp/vsftpd-2.3.4.zip
    dest: /tmp/
    remote_src: yes
    creates: /tmp/vsftpd-2.3.4
    owner: root
    group: root
    mode: '0755'

- name: Fix permissions and ownership on extracted vsftpd-2.3.4 directory
  file:
    path: /tmp/vsftpd-2.3.4
    state: directory
    recurse: yes
    owner: root
    group: root
    mode: '0755'

- name: Modify Makefile to add -lcrypt
  ansible.builtin.command:
    cmd: sed -i 's|^LINK.*|LINK    =       -Wl,-s -lcrypt -lpam -lcap|' Makefile
  args:
    chdir: /tmp/vsftpd-2.3.4

- name: Remove line '#define VSF_SYSDEP_HAVE_UTMPX' from sysdeputil.c
  command: sed -i '/#define VSF_SYSDEP_HAVE_UTMPX/d' sysdeputil.c
  args:
    chdir: "/tmp/vsftpd-2.3.4"

- name: Copy vsftpd.conf to /etc
  copy:
    src: "/tmp/vsftpd-2.3.4/vsftpd.conf"
    dest: /etc/sec-vsftpd.conf
    remote_src: yes
    mode: '0644'

- name: Build vsftpd from source
  command: make
  args:
    chdir: /tmp/vsftpd-2.3.4
    creates: /tmp/vsftpd-2.3.4/vsftpd

- name: Install vsftpd binary
  copy:
    src: /tmp/vsftpd-2.3.4/vsftpd
    dest: /usr/sbin/vsftpd
    mode: '0755'
    remote_src: yes
  notify: restart vsftpd

# - name: Force installation of vulnerable vsftpd 2.3.4 (RedHat)
#   yum:
#     name: "http://archive.kali.org/old/mirror/metasploitable/vsftpd-2.3.4-1.el5.i386.rpm"
#   when: ansible_os_family == "RedHat"
#   ignore_errors: yes

# - name: Create vsftpd service file
#   copy:
#     content: |
#       [Unit]
#       Description=vsftpd FTP server
#       After=network.target

#       [Service]
#       Type=forking
#       ExecStart=/usr/sbin/vsftpd /etc/vsftpd.conf
#       ExecReload=/bin/kill -HUP $MAINPID
#       Restart=on-failure

#       [Install]
#       WantedBy=multi-user.target
#     dest: /etc/systemd/system/vsftpd.service
#     mode: '0644'
#   notify:
#     - restart vsftpd

- name: Enable and start vsftpd service
  systemd:
    name: vsftpd
    state: started
    enabled: yes
    daemon_reload: yes

- name: Create FTP directory structure
  file:
    path: "{{ item }}"
    state: directory
    owner: ftp
    group: ftp
    mode: '0555'
  loop:
    - "{{ anonymous_root }}"
    - "{{ anonymous_root }}/upload"
    - "{{ anonymous_root }}/admin"
    - /var/lib/ftp
    - /usr/share/empty

- name: Create symlinks and set permissions for vsftpd and start-vsftpd
  ansible.builtin.file:
    src: "/tmp/vsftpd-2.3.4/{{ item.src }}"
    dest: "/usr/local/bin/{{ item.dest }}"
    state: link
    mode: '0770'
    follow: false
    force: yes
  loop:
    - { src: "vsftpd", dest: "vsftpd" }
    - { src: "start-vsftpd.sh", dest: "start-vsftpd" }

# TODO: Change content!
- name: Create fake sensitive data
  copy:
    content: "{{ item.content }}"
    dest: "{{ anonymous_root }}/{{ item.filename }}"
    mode: '0444'
  loop:
    - { filename: "secret-plans.txt", content: "CONFIDENTIAL: Plan Trojan Horse\nDate: 2025-12-01\nTarget: Production Server\nCredentials: virgil/ArmaVirumqueCano" }
    - { filename: "user-creds.csv", content: "username,password,email\nadministrator,Password123!,Administrator@troy.cdtalpha.com\nestew,MTAwIG1lYXN1cmVzIG9mIG9pbA==,estew@troy.cdtalpha.com" }
    - { filename: "network-diagram.pdf", content: "FAKE NETWORK DIAGRAM - HAHA" }
    - { filename: ".ssh-key-ovid", content: "-----BEGIN OPENSSH PRIVATE KEY-----\nb3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAlwAAAAdzc2gtcn\nNhAAAAAwEAAQAAAIEAoJoKFRjtIu8mNkrtvjw+Op7fberpeMJoj9ihBaQ0kwJCfU5wXOYb\nuL9JzzsNjAsFL2wjBzAsNGRgoKF47GIXtTyEmjUlhcH55CqjNPNJ15gSfoncYtbwpijg5F\njUdWOfHakyDKa13J6HES7SDy/dYk+SJQVBAeqJloan21RjyC0AAAIAgZOpe4GTqXsAAAAH\nc3NoLXJzYQAAAIEAoJoKFRjtIu8mNkrtvjw+Op7fberpeMJoj9ihBaQ0kwJCfU5wXOYbuL\n9JzzsNjAsFL2wjBzAsNGRgoKF47GIXtTyEmjUlhcH55CqjNPNJ15gSfoncYtbwpijg5FjU\ndWOfHakyDKa13J6HES7SDy/dYk+SJQVBAeqJloan21RjyC0AAAADAQABAAAAgDc0vEKETv\n+zNW90UkUScFG2Sxd9qMPaEBdiX/eQeoIORMzOKdHFR8I5/yU9J2r8XsvuYBwYcxmPZ6fP\n2cFn9r3Kl9NJsVueTw5ZTVbyZhpabTi+EMW4tfgtQt1ZqgX+xcHz206FnC1AYLyKMQCbII\n7RsnQ8SFCEWV8vpvLLggABAAAAQHIKOs4BP4fKesn4zgBuruqOa3WXCWpRRNqzJNaafSIo\nSiwzmox1yKE1NK5IV0wpgTyOIvfRm0wEgOxMi7VaFlUAAABBANEms7w4r+2Abf4IQM5rPk\nX7dsgPPpLfMJUHZaSOzLaJYcI+Z6SsKNFjgrSVlj2KhqcGnSmzXEwSlmHnZXusZEUAAABB\nAMSTYQAlI3haaJ/tUIK4osTpuLg9GT/A51vn63iNTJN/LigS4+gZH9cpaOYVE7fD1f8Tdp\nlpI0sUajkLtIvAtskAAAAIb3ZpZEBzc2gBAgM=\n-----END OPENSSH PRIVATE KEY-----"}

- name: Create weak local users
  user:
    name: "{{ item.username }}"
    password: "{{ item.password | password_hash('sha512') }}"
    shell: /bin/bash
    groups: ftp
  loop: "{{ weak_password_users + local_users }}"

- name: Configure vsftpd with vulnerable settings
  template:
    src: vsftpd.conf.j2
    dest: /etc/vsftpd.conf
    backup: yes
  notify: restart vsftpd

# - name: Disable anonymous write access
#   file:
#     path: "{{ anonymous_root }}/incoming"
#     state: directory
#     owner: ftp
#     group: ftp
#     mode: '0755'

# - name: Ensure anonymous uploads directory exists with correct permissions
#   file:
#     path: "{{ anonymous_root }}/uploads"
#     state: directory
#     owner: ftp
#     group: ftp
#     mode: '0711'

- name: Install and configure FTP monitor script
  template:
    src: ftp-monitor.sh.j2
    dest: /usr/local/bin/ftp-monitor.sh
    mode: '0755'

- name: Set up monitoring cron job
  cron:
    name: "FTP Connection Monitor"
    minute: "*/5"
    job: "/usr/local/bin/ftp-monitor.sh"

- name: Configure firewall to allow FTP
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ ftp_port }}"
    jump: ACCEPT
    comment: "FTP Server"

- name: Save iptables rules
  command: iptables-save --file /etc/iptables/rules.v4
  when: ansible_os_family == "Debian"

- name: Install and configure fail2ban for blue team monitoring
  apt:
    name: fail2ban
    state: present
  when: ansible_os_family == "Debian"

- name: Configure fail2ban for FTP
  copy:
    content: |
      [vsftpd]
      enabled = true
      port = ftp
      filter = vsftpd
      logpath = /var/log/vsftpd.log
      maxretry = 3
      bantime = 3600
    dest: /etc/fail2ban/jail.d/vsftpd.conf

- name: Ensure logging is enabled
  lineinfile:
    path: /etc/vsftpd.conf
    regex: '^xferlog_file='
    line: 'xferlog_file=/var/log/vsftpd.log'
    state: present
  notify: restart vsftpd
