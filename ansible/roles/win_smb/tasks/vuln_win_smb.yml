# AUTHOR: Masaki
#FIWB
- name: Ensure SMBv1 is installed and enabled
  ansible.windows.win_feature:
    name: FS-SMB1
    state: present

- name: Configure insecure SMB server settings
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
    name: "{{ item.name }}"
    data: "{{ item.data }}"
    type: dword
  loop:
    - { name: SMB1, data: 1 }
    - { name: EnableSecuritySignature, data: 0 }

- name: Ensure AutoShareServer is enabled
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters
    name: AutoShareServer
    data: 1
    type: dword

- name: Ensure flags directory exists
  ansible.windows.win_file:
    path: "C:\\flags"
    state: directory
    recurse: yes

- name: Set weak filesystem permissions on flag directories
  ansible.windows.win_acl:
    path: "C:\\flags"
    user: "Everyone"
    type: allow
    rights: FullControl
    inherit: ContainerInherit, ObjectInherit
    propagation: None

- name: Create read-only flag in public folder
  ansible.windows.win_copy:
    dest: "C:\\flags\\congrats.txt"
    content: "TROY{2ez4me}"
    force: yes

- name: Create and expose vulnerable share for flags
  ansible.windows.win_share:
    name: "FLAG_SHARE_1"
    path: "C:\\flags"
    description: "First flag location"
    list: yes
    full: "Everyone"
    read: "Everyone"

- name: Ensure C:\temp exists
  ansible.windows.win_file:
    path: C:\temp
    state: directory

- name: Copy script to remote
  ansible.windows.win_copy:
    content: |
      Grant-SmbShareAccess -Name "C$" -AccountName "Everyone" -AccessRight Full -Force; $acl = Get-Acl "C:\"; $acl.SetAccessRule((New-Object System.Security.AccessControl.FileSystemAccessRule("Everyone","FullControl","ContainerInherit,ObjectInherit","None","Allow"))); Set-Acl "C:\" $acl
    dest: C:\temp\thankForrest.ps1

- name: Execute script
  ansible.windows.win_shell: >
    powershell.exe -NoProfile -NonInteractive -ExecutionPolicy Bypass -File C:\temp\thankForrest.ps1
  register: run_result

- name: Fail on non-zero return
  ansible.builtin.fail:
    msg: "PowerShell failed: {{ run_result.stderr }} / rc={{ run_result.rc }} / stdout={{ run_result.stdout_lines | join('\n') }}"
  when: run_result.rc != 0

- name: Enable insecure guest authentication
  ansible.windows.win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\LanmanWorkstation
    name: AllowInsecureGuestAuth
    data: 1
    type: dword

- name: Disable SMB signing
  ansible.windows.win_regedit:
    path: HKLM:\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters
    name: RequireSecuritySignature
    data: 0
    type: dword
